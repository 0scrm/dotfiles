[core]
  pager = delta
  excludesfile = ~/.gitignore_global
  editor = nano
  whitespace = -trailing-space

[user]
  name = Oscar Marion
  email = me@oscarmarion.dev
  signingkey = ~/.ssh/dev.pub

[gpg]
  format = ssh

[gpg "ssh"]
  program = "/Applications/1Password.app/Contents/MacOS/op-ssh-sign"
  allowedSignersFile = ~/.config/git/allowed_signers

[commit]
  gpgsign = true


[alias]
  aliases = "!git config -l | grep alias | cut -c 7-"
  ci = commit
  cim = commit -m
  co = checkout
  st = status -s
  cp = cherry-pick
  po = push origin
  diff = diff --word-diff
  lg = log --date=relative --pretty=tformat:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%an %ad)%Creset'
  lgt = log --graph --date=relative --pretty=tformat:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%an %ad)%Creset'
  # Update your last commit with staged files without editing the commit message.
  oops = commit --amend --no-edit
  # Ensure that force-pushing won't lose someone else's work
  pwl = push --force-with-lease
  # Rebase wonâ€™t trigger hooks on each "replayed" commit.
  # This is an ugly hack that will replay each commit during rebase with the
  # standard `commit` command which will trigger hooks.
  rebase-with-hooks = rebase -x 'git reset --soft HEAD~1 && git commit -C HEAD@{1}'
  # List local commits that were not pushed to remote repository
  review-local = "!git lg @{push}.."
  # Edit last commit message
  reword = commit --amend
  # Undo last commit but keep changed files in stage
  uncommit = reset --soft HEAD~1
  # Remove file(s) from Git but not from disk
  untrack = rm --cache --
  sl = stash list
  sa = stash apply
  sp = stash pop
  ss = stash save -u
  clean = clean -f -d

[diff]
  mnemonicPrefix = true
  renames = true
  wordRegex = .
  submodule = log
  tool = vscode
  colorMoved = default

[difftool "vscode"]
  cmd = code --wait --diff $LOCAL $REMOTE

[fetch]
  recurseSubmodules = on-demand

[grep]
  break = true
  heading = true
  lineNumber = true
  extendedRegexp = true

[log]
  abbrevCommit = true
  follow = true
  decorate = false

[merge]
  ff = false
  conflictstyle = diff3

[mergetool]
  keepBackup = false
  keepTemporaries = false
  writeToTemp = true
  prompt = false

[pull]
  # auto-rebasing on pulls
  rebase = merges

[push]
  default = upstream
  followTags = true
	autoSetupRemote = true

[rerere]
  autoupdate = true
  enabled = true

[status]
  submoduleSummary = true
  showUntrackedFiles = all

[color]
  ui = auto

[color "branch"]
  upstream = cyan

[http]
	sslverify = false

[init]
	defaultBranch = main

[interactive]
    diffFilter = delta --color-only

[tag]
	gpgsign = true

[delta]
    navigate = true    # use n and N to move between diff sections
    light = false      # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)